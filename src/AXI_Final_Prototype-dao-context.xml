<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans      http://www.springframework.org/schema/beans/spring-beans-4.1.xsd     http://www.springframework.org/schema/aop       http://www.springframework.org/schema/aop/spring-aop-4.1.xsd      http://www.springframework.org/schema/tx       http://www.springframework.org/schema/tx/spring-tx-4.1.xsd         http://www.springframework.org/schema/context       http://www.springframework.org/schema/context/spring-context-4.1.xsd         http://www.springframework.org/schema/jee       http://www.springframework.org/schema/jee/spring-jee-4.1.xsd          http://www.springframework.org/schema/lang      http://www.springframework.org/schema/lang/spring-lang-4.1.xsd      http://www.springframework.org/schema/security       http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- ******************************************************************** -->
	<!-- Scan for dao layer annotated beans -->
	<!-- ******************************************************************** -->
	<context:component-scan base-package="security"
		scoped-proxy="interfaces" />
	<context:component-scan base-package="axi.source.dao"
		scoped-proxy="interfaces" />

	<!-- ******************************************************************** -->
	<!-- Mark bean transactions as annotation driven -->
	<!-- ******************************************************************** -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- ******************************************************************** -->
	<!-- PropertyConfigurer for the DAO -->
	<!-- ******************************************************************** -->
	<context:property-placeholder
		location="classpath:AXI_Final_Prototype-dao.properties" />

	<!-- ******************************************************************** -->
	<!-- Setup the transaction manager -->
	<!-- ******************************************************************** -->
	<!-- Using Atomikos Transaction Manager -->
	<bean class="com.atomikos.icatch.jta.UserTransactionManager"
		destroy-method="close" id="atomikosTransactionManager" init-method="init">
		<property name="forceShutdown" value="true" />
		<property name="startupTransactionService" value="true" />
		<property name="transactionTimeout" value="60" />
	</bean>

	<bean class="com.atomikos.icatch.jta.UserTransactionImp" id="atomikosUserTransaction" />

	<!-- Configure the Spring framework to use JTA transactions from Atomikos -->
	<bean class="org.springframework.transaction.jta.JtaTransactionManager"
		id="transactionManager">
		<property name="transactionManager" ref="atomikosTransactionManager" />
		<property name="userTransaction" ref="atomikosUserTransaction" />
		<property name="transactionSynchronizationName" value="SYNCHRONIZATION_ON_ACTUAL_TRANSACTION" />
	</bean>

	<!-- ******************************************************************** -->
	<!-- Setup a data source -->
	<!-- ******************************************************************** -->

	<!-- Using Apache DBCP Data Sources -->
	<bean class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" name="mysqlDS,springSecurityDataSource">
		<property name="driverClassName" value="${mysql.connection.driver_class}" />
		<property name="username" value="${mysql.connection.username}" />
		<property name="password" value="${mysql.connection.password}" />
		<property name="url" value="${mysql.connection.url}" />
		<property name="maxIdle" value="${mysql.minPoolSize}" />
		<property name="maxActive" value="${mysql.maxPoolSize}" />
	</bean>
	<bean class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" name="mysql_connectorDS">
		<property name="driverClassName" value="${mysql_connector.connection.driver_class}" />
		<property name="username" value="${mysql_connector.connection.username}" />
		<property name="password" value="${mysql_connector.connection.password}" />
		<property name="url" value="${mysql_connector.connection.url}" />
		<property name="maxIdle" value="${mysql_connector.minPoolSize}" />
		<property name="maxActive" value="${mysql_connector.maxPoolSize}" />
	</bean>

	<!-- ******************************************************************** -->
	<!-- Setup each persistence unit -->
	<!-- ******************************************************************** -->

	<!-- Configure a JPA vendor adapter -->
	<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
		id="mysqlJPAVendorAdapter">
		<property name="showSql" value="${mysql.show_sql}" />
		<property name="generateDdl" value="${mysql.generateDdl}" />
		<property name="databasePlatform" value="${mysql.dialect}" />
	</bean>
	<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
		id="mysql_connectorJPAVendorAdapter">
		<property name="showSql" value="${mysql_connector.show_sql}" />
		<property name="generateDdl" value="${mysql_connector.generateDdl}" />
		<property name="databasePlatform" value="${mysql_connector.dialect}" />
	</bean>
	<!-- EntityManager Factory that brings together the persistence unit, datasource, 
		and JPA Vendor -->
	<bean
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		id="mysql">
		<property name="dataSource" ref="mysqlDS" />
		<property name="persistenceUnitName" value="mysql" />
		<property name="jpaVendorAdapter" ref="mysqlJPAVendorAdapter" />
		<property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.transaction.manager_lookup_class"
					value="com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup" />
				<entry key="hibernate.connection.release_mode" value="on_close" />
			</map>
		</property>
	</bean>
	<bean
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		id="mysql_connector">
		<property name="dataSource" ref="mysql_connectorDS" />
		<property name="persistenceUnitName" value="mysql_connector" />
		<property name="jpaVendorAdapter" ref="mysql_connectorJPAVendorAdapter" />
		<property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.transaction.manager_lookup_class"
					value="com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup" />
				<entry key="hibernate.connection.release_mode" value="on_close" />
			</map>
		</property>
	</bean>
</beans>
